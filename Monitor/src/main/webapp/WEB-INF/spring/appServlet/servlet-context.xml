<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:rabbit="http://www.springframework.org/schema/rabbit"
	xmlns:cloud="http://schema.cloudfoundry.org/spring"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/rabbit http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd
        http://schema.cloudfoundry.org/spring http://schema.cloudfoundry.org/spring/cloudfoundry-spring-0.7.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/favicon.ico" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<context:component-scan base-package="org.seerc.monitor" />

	<beans:bean id="myListener" class="org.seerc.monitor.messaging.MonitorListener" />

<!-- 	<beans:bean id="messageConverter" -->
<!-- 		class="org.springframework.amqp.support.converter.JsonMessageConverter" /> -->

	<!-- Obtain a connection to the RabbitMQ via cloudfoundry-runtime: -->
	<cloud:rabbit-connection-factory id="connectionFactory" />

	<!-- Set up the AmqpTemplate/RabbitTemplate: -->
	<rabbit:template connection-factory="connectionFactory" />

	<!-- Request that queues, exchanges and bindings be automatically -->
	<!-- declared on the broker: -->
	<rabbit:admin connection-factory="connectionFactory" />

	<!-- Declare the "messages" queue: -->
	<rabbit:queue name="queue.monitoring" />

<!-- 	<rabbit:listener-container -->
<!-- 		connection-factory="connectionFactory"> -->
<!-- 		<rabbit:listener queues="queue.monitoring" ref="myHandler" -->
<!-- 			method="handleMessage" /> -->
<!-- 	</rabbit:listener-container> -->

	<beans:bean
		class="org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer">
		<beans:property name="connectionFactory" ref="connectionFactory" />
		<beans:property name="queueNames" value="queue.monitoring" />
		<beans:property name="messageListener" ref="myListener" />
	</beans:bean>

<!-- 	<beans:bean id="rabbitTemplate" -->
<!-- 		class="org.springframework.amqp.rabbit.core.RabbitTemplate"> -->
<!-- 		<beans:property name="connectionFactory" ref="connectionFactory" /> -->
<!-- 		<beans:property name="messageConverter"> -->
<!-- 			<beans:bean -->
<!-- 				class="org.springframework.amqp.support.converter.JsonMessageConverter" /> -->
<!-- 		</beans:property> -->
<!-- 	</beans:bean> -->

</beans:beans>
